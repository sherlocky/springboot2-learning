### \u9ED8\u8BA4\u4E0D\u9700\u8981\u5728 application.properties \u5E94\u7528\u914D\u7F6E\u6587\u4EF6\u4E2D\u914D\u7F6E\u4EFB\u4F55\u914D\u7F6E\u3002
### \u9ED8\u8BA4\u542F\u52A8\u5176\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u5982\u9700\u4FEE\u6539\u914D\u7F6E\u53EF\u53C2\u8003\u5982\u4E0B\uFF1A
############################ thymelefe default config
# Enable template caching.\uFF08\u662F\u5426\u5F00\u542F\u6A21\u677F\u6709\u7F13\u5B58\uFF09\u9ED8\u8BA4\u662F\u5F00\u542F\uFF0C\u5F00\u53D1\u65F6\u8BF7\u5173\u95ED
spring.thymeleaf.cache=true
# Check that the template exists before rendering it.
spring.thymeleaf.check-template=true
# Check that the templates location exists.
spring.thymeleaf.check-template-location=true
# Enable Thymeleaf view resolution for Web frameworks.
spring.thymeleaf.enabled=true
# Template files encoding.
spring.thymeleaf.encoding=UTF-8
# Comma-separated list of view names that should be excluded from resolution.
spring.thymeleaf.excluded-view-names=
# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
spring.thymeleaf.mode=HTML5
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# Maximum size of data buffers used for writing to the response, in bytes.
spring.thymeleaf.reactive.max-chunk-size=
# Media types supported by the view technology.
spring.thymeleaf.reactive.media-types=
# Content-Type value written to HTTP responses.
spring.thymeleaf.servlet.content-type=text/html
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
# Order of the template resolver in the chain.
spring.thymeleaf.template-resolver-order=
# Comma-separated list of view names that can be resolved.
spring.thymeleaf.view-names=