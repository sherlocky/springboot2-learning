/**
 * MybatisGenerator提供了maven plugin,ant target，java三种方式启动
 * 虽然mybatisgenerator没有提供gradle的插件，但gradle可以调用ant任务，因此，gradle也能启动MybatisGenerator
 *
 * 运行[mybatisGenerate]任务即可
 */
// 添加mybatisGenerator配置(单独配置依赖分组)
configurations {
    mybatisGenerator
}

dependencies {
    // implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')

    mybatisGenerator('mysql:mysql-connector-java:5.1.47')
    mybatisGenerator('org.mybatis.generator:mybatis-generator-core:1.3.2')
    mybatisGenerator('tk.mybatis:mapper:3.3.1')
}

// 读取数据库配置文件
def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/mybatis/db-mysql.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}

// 添加任务
task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.pass")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] =properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}